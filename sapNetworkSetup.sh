#!/usr/bin/env bash

# custom domains to force routing to sap network
custom_domains=(
  *.prod.cf.hybris.com
  *.cf3.hybris.com
  graphite.cf3.hybris.com
  cf-admin-ui.cf3.hybris.com
  *.stage.cf.hybris.com
  *.cf4.hybris.com
  graphite.cf4.hybris.com
  cf-admin-ui.cf4.hybris.com
  uptime-int.prod.cf.hybris.com
)


###########################################
##### DO NOT EDIT BELOW THIS LINE !!! #####
###########################################
RESET="\e[0m"
ESC="\e["
BoldFace="1"
RedFont="31"
BlueBack="44"
WhiteFont="37"

printf "${ESC}${BlueBack};${BoldFace};${WhiteFont}m--------------------------------------------------\n${RESET}"
printf "${ESC}${BlueBack};${BoldFace};${WhiteFont}m          SAP dual network setup script           \n${RESET}"
printf "${ESC}${BlueBack};${BoldFace};${WhiteFont}m--------------------------------------------------\n\n${RESET}"

if [ -d "/etc/resolver/" ]; then
  sudo rm -rf /etc/resolver/
fi
sudo mkdir -p /etc/resolver/


OLDIFS="$IFS"
IFS=$'\n'
NETWORK_SERVICES=( $(networksetup -listallnetworkservices | sed '/An asterisk ([*]) denotes that a network service is disabled./d; s/^[*]//') )
IFS="$OLDIFS"

for service in "${NETWORK_SERVICES[@]}"
do
  interface="$(/usr/sbin/networksetup -listallhardwareports 2>/dev/null | grep -A1 "Hardware Port: $service" | tail -1 | awk '{print $2}')"
  router="$(/usr/sbin/networksetup -getinfo "$service" 2>/dev/null | grep "^Router" | cut -d: -f2)"
  status="$(/sbin/ifconfig  "$interface" 2>/dev/null | grep "status:\ " | awk '{print $2}')"

  if [ "$status" = "active" ]; then
    domainservers=( $(ipconfig getpacket "$interface" | egrep "^domain_name_server.*:" | sed -e '1,/{/s/[^{]*//' -e 's/[}{,]//g') )
    searchdomains=( $(ipconfig getpacket "$interface" | egrep "^domain_search.*:" | sed -e '1,/{/s/[^{]*//' -e 's/[}{,]//g') )

    if [[ ${searchdomains[@]} = *sap* ]]; then
      searchdomains_str=${searchdomains[@]}
      arpa="$(echo ${router# } | cut -d "." -f1)"

      #################### RESOLVER ####################
      if [ ! -f "/etc/resolver/${arpa}.in-addr.arpa" ]
      then
        echo ""
        echo "Creating ${arpa}.in-addr.arpa file"
        sudo -- sh -c "printf '#\n# This file is automatically generated.\n#\nsearch ${searchdomains_str}\n' > /etc/resolver/${arpa}.in-addr.arpa"
        for dns in "${domainservers[@]}"
        do
          sudo -- sh -c "printf 'nameserver ${dns}\n' >> /etc/resolver/${arpa}.in-addr.arpa"
        done
      fi

      echo ""
      for domain in "${searchdomains[@]}"
      do
        echo "Binding SAP domain ${domain} to resolver"
        sudo ln -sf "/etc/resolver/${arpa}.in-addr.arpa" "/etc/resolver/${domain}"
      done

      #################### ROUTES ####################
      echo ""
      echo "Adding main route (${arpa}.0.0.0/8 => ${router# })"
      sudo route delete -net "${arpa}.0.0.0/8" ${router# } > /dev/null 2>&1
      sudo route add -net "${arpa}.0.0.0/8" ${router# } > /dev/null 2>&1

      # ADD CUSTOM DOMAINS TO ROUTE
      echo ""
      for domain in "${custom_domains[@]}"
      do
        ip=`dig $domain A +short`
        if [[ ! $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          printf "${ESC}${RedFont}mCan't find domain ip for $domain.$RESET"
        else
          echo "Adding custom route (${ip} => ${router# })"
          sudo route delete -net ${ip} ${router# } > /dev/null 2>&1
          sudo route add -net ${ip} ${router# } > /dev/null 2>&1
        fi
      done

      echo ""
      exit 0
    fi
  fi
done

printf "${ESC}${RedFont}mNo SAP network found!!!!!\n\n$RESET"
